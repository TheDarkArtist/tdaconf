#!/bin/bash
# ====================
# Arch Linux Advanced System Optimizer
# Author: TheDarkArtist
# Date: 2025-02-25
# Purpose: Performance optimization with monitoring
# ====================

# Terminal colors for better output
RED='\e[0;31m'
GREEN='\e[0;32m'
BLUE='\e[0;34m'
YELLOW='\e[0;33m'
NC='\e[0m'

# Strict error checking
set -euo pipefail
IFS=$'\n\t'

# Root check with style
if [[ $EUID -ne 0 ]]; then
    echo -e "${RED}[!] Need root privileges, mate! Run with sudo${NC}"
    exit 1
fi

# Performance monitoring functions
log_performance() {
    local before_after=$1
    echo -e "\n${BLUE}[*] $before_after Performance Metrics:${NC}"
    echo -e "${YELLOW}[*] Memory Usage:${NC}"
    free -h
    echo -e "${YELLOW}[*] Disk Usage:${NC}"
    df -h /
    echo -e "${YELLOW}[*] System Load:${NC}"
    uptime
}

# Benchmark function
benchmark_operation() {
    local start_time=$(date +%s.%N)
    "$@"
    local end_time=$(date +%s.%N)
    local elapsed=$(echo "$end_time - $start_time" | bc)
    echo -e "${BLUE}[*] Operation took: ${elapsed} seconds${NC}"
}

# Progress indicator
show_progress() {
    echo -e "${GREEN}[+] $1...${NC}"
}

# Error handler
handle_error() {
    echo -e "${RED}[!] Error occurred in operation: $1${NC}"
    return 1
}

# Initial performance check
show_progress "Initial system status"
log_performance "Before"

# Create cleanup log
LOG_FILE="/var/log/arch-optimizer.log"
exec 1> >(tee -a "$LOG_FILE") 2>&1

# Advanced package cleanup
show_progress "Advanced package cleanup"
benchmark_operation bash << 'EOL'
    # Remove unused packages and dependencies
    pacman -Rns $(pacman -Qtdq) 2>/dev/null || true

    # Clean package cache but keep last version
    paccache -rk1
    paccache -ruk0

    # Remove unused repositories
    pacman -Sc --noconfirm
EOL

# Aggressive cache cleanup
show_progress "Aggressive cache cleanup"
benchmark_operation bash << 'EOL'
    # System cache
    sync
    echo 3 > /proc/sys/vm/drop_caches

    # Common cache directories
    CACHE_DIRS=(
        "/tmp"
        "/var/tmp"
        "/var/cache/pacman/pkg"
        "/root/.cache"
        "/home/*/.cache"
        "/home/*/.thumbnails"
        "/home/*/.local/share/Trash"
    )

    for dir in "${CACHE_DIRS[@]}"; do
        find "$dir" -type f -delete 2>/dev/null || true
    done
EOL

# Advanced memory optimization
show_progress "Memory optimization"
benchmark_operation bash << 'EOL'
    # Optimize swap
    swapoff -a && swapon -a

    # Adjust kernel parameters for better performance
    sysctl -w vm.swappiness=10
    sysctl -w vm.vfs_cache_pressure=50
    sysctl -w vm.dirty_ratio=10
    sysctl -w vm.dirty_background_ratio=5
EOL

# Storage optimization
show_progress "Storage optimization"
benchmark_operation bash << 'EOL'
    # TRIM for SSDs
    fstrim -av 2>/dev/null || true

    # Remove old journals
    journalctl --vacuum-size=50M

    # Clean logs
    find /var/log -type f -regex ".*\.[0-9]+.*" -delete
    find /var/log -type f -name "*.old" -delete
    find /var/log -type f -name "*.gz" -delete

    # Truncate active logs
    for log in /var/log/*.log; do
        truncate -s 0 "$log" 2>/dev/null || true
    done
EOL

# System optimization
show_progress "System optimization"
benchmark_operation bash << 'EOL'
    # Remove broken symlinks
    find / -xtype l -delete 2>/dev/null || true

    # Clean font cache
    fc-cache -f

    # Update mlocate database
    updatedb

    # Clean thumbnail cache
    find /home -type d -name ".thumbnails" -exec rm -rf {} + 2>/dev/null
EOL

# Final performance check
show_progress "Final system status"
log_performance "After"

# Save system info for comparison
{
    echo "=== System Information ==="
    date
    uname -a
    pacman -Q | wc -l
    df -h
    free -h
} >> "$LOG_FILE"

echo -e "${GREEN}[âœ“] Optimization complete! Log saved to $LOG_FILE${NC}"
